{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/quotes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListQuotesComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\");\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r1.author);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(quote_r1.quote);\n  }\n}\nexport class ListQuotesComponent {\n  constructor(quotesService, router) {\n    this.quotesService = quotesService;\n    this.router = router;\n    this.quotes = [];\n  }\n  ngOnInit() {\n    this.quotesService.getAllQuotes().subscribe({\n      next: response => {\n        this.quotes = response.value;\n        console.log(this.quotes);\n      },\n      error: resonse => {\n        console.log(resonse);\n      }\n    });\n  }\n}\nListQuotesComponent.ɵfac = function ListQuotesComponent_Factory(t) {\n  return new (t || ListQuotesComponent)(i0.ɵɵdirectiveInject(i1.QuotesService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListQuotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListQuotesComponent,\n  selectors: [[\"app-list-quotes\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"div\", \"container\", \"my-5\"], [1, \"mb-5\", \"row\"], [1, \"col-2\"], [1, \"\"], [1, \"col-10\", \"text-end\"], [\"routerLink\", \"manage-quotes\", 1, \"btn\", \"btn-dark\"], [1, \"table\"], [\"colspan\", \"3\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ListQuotesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4, \"Quotes\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"a\", 5);\n      i0.ɵɵtext(7, \"Add Quote\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"table\", 6)(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Author\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"tags\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Quote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 7);\n      i0.ɵɵtext(18, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, ListQuotesComponent_tr_20_Template, 6, 2, \"tr\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.quotes);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAoBYA,0BAAiC;IACzBA,YAAgB;IAAAA,iBAAK;IACzBA,qBAAS;IACTA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;;;;IAFpBA,eAAgB;IAAhBA,qCAAgB;IAEhBA,eAAe;IAAfA,oCAAe;;;ACbnC,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,aAA4B,EAAUC,MAAc;IAApD,kBAAa,GAAbD,aAAa;IAAyB,WAAM,GAANC,MAAM;IADhE,WAAM,GAAa,EAAE;EACuD;EAC5EC,QAAQ;IACN,IAAI,CAACF,aAAa,CAACG,YAAY,EAAE,CAC9BC,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,KAAK;QAC5BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC;MAC1B,CAAC;MACDI,KAAK,EAAGC,OAAO,IAAI;QACjBH,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;MACtB;KACD,CAAC;EACN;;AAdWd,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVhCpB,8BAAgC;MAGPA,sBAAM;MAAAA,iBAAK;MAE5BA,8BAA6B;MAC0BA,yBAAS;MAAAA,iBAAI;MAIxEA,gCAAqB;MAGLA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,8BAAgB;MAAAA,uBAAM;MAAAA,iBAAK;MAGnCA,8BAAO;MACHA,oEAIK;MACjBA,iBAAQ;;;MAL0BA,gBAAS;MAATA,oCAAS","names":["i0","ListQuotesComponent","constructor","quotesService","router","ngOnInit","getAllQuotes","subscribe","next","response","quotes","value","console","log","error","resonse","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/seemavaza/Projects/WarpDrivePractical/WarpDrivePractical/ClientApp/src/app/Components/list-quotes/list-quotes.component.html","/Users/seemavaza/Projects/WarpDrivePractical/WarpDrivePractical/ClientApp/src/app/Components/list-quotes/list-quotes.component.ts"],"sourcesContent":["<div class=\"div container my-5\">\n    <div class=\"mb-5 row\">\n        <div class=\"col-2\">\n            <h3 class=\"\">Quotes</h3>\n        </div>\n        <div class=\"col-10 text-end\">\n            <a class=\"btn btn-dark\" routerLink=\"manage-quotes\">Add Quote</a>\n        </div>\n    </div>\n\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Author</th>\n                <th>tags</th>\n                <th>Quote</th>\n                <th colspan=\"3\">Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let quote of quotes\">\n                <td>{{quote.author}}</td>\n                <td></td>\n                <td>{{quote.quote}}</td>\n            </tr>\n</tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Quotes } from 'src/app/models/quotes.model';\nimport { Route, Router } from '@angular/router';\nimport { QuotesService } from 'src/app/services/quotes.service';\n\n@Component({\n  selector: 'app-list-quotes',\n  templateUrl: './list-quotes.component.html',\n  styleUrls: ['./list-quotes.component.css']\n})\nexport class ListQuotesComponent implements OnInit {\n  quotes: Quotes[] = [];\n  constructor(private quotesService: QuotesService, private router: Router) { }\n  ngOnInit(): void {\n    this.quotesService.getAllQuotes()\n      .subscribe({\n        next: (response) => {\n          this.quotes = response.value;\n          console.log(this.quotes);\n        },\n        error: (resonse) => {\n          console.log(resonse);\n        }\n      })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}